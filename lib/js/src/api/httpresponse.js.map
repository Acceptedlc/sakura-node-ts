{"version":3,"sources":["../src/api/httpresponse.ts"],"names":[],"mappings":";AAQA;IAGE,YAAY,IAAS;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;AACH,CAAC;AANY,uBAAe,kBAM3B,CAAA;AAKD;IAKE,YAAY,MAAuB;QAHnC,SAAI,GAAW,GAAG,CAAC;QACnB,YAAO,GAAW,aAAa,CAAC;QAG9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,MAAM,CAAC;YACL,KAAK,EAAE;gBACL,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;SACF,CAAC;IACJ,CAAC;AACH,CAAC;AAlBY,0BAAkB,qBAkB9B,CAAA;AAKD;IAIE,YAAY,OAAe;QAH3B,SAAI,GAAW,GAAG,CAAC;QACnB,YAAO,GAAW,WAAW,CAAC;QAG5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,MAAM,CAAC;YACL,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;SACF,CAAC;IACJ,CAAC;AACH,CAAC;AAhBY,wBAAgB,mBAgB5B,CAAA;AAKD;IAIE,YAAY,OAAe;QAH3B,SAAI,GAAW,GAAG,CAAC;QAIjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,MAAM,CAAC;YACL,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;SACF,CAAC;IACJ,CAAC;AACH,CAAC;AAhBY,6BAAqB,wBAgBjC,CAAA;AAKD;IAIE,YAAY,OAAe,EAAE,IAAI,GAAW,GAAG;QAH/C,SAAI,GAAW,GAAG,CAAC;QACnB,YAAO,GAAW,EAAE,CAAC;QAGnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,OAAO,gBAAgB;QACrB,MAAM,CAAC,IAAI,iBAAiB,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,YAAY;QACjB,MAAM,CAAC,IAAI,iBAAiB,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM;QACJ,MAAM,CAAC;YACL,KAAK,EAAE;gBACL,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB;SACF,CAAC;IACJ,CAAC;AACH,CAAC;AAzBY,yBAAiB,oBAyB7B,CAAA","file":"httpresponse.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport {ApiError} from './apierror';\n\n/**\n * Represents success response with only 1 page.\n */\nexport class SuccessResponse {\n  data: any;\n\n  constructor(data: any) {\n    this.data = data;\n  }\n}\n\n/**\n * Represents bad request (:400) response.\n */\nexport class BadRequestResponse {\n  errors: Array<ApiError>;\n  code: number = 400;\n  message: string = 'Bad Request';\n\n  constructor(errors: Array<ApiError>) {\n    this.errors = errors;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        errors: this.errors,\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents not found (:404) response.\n */\nexport class NotFoundResponse {\n  code: number = 404;\n  message: string = 'Not Found';\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents register error response.\n */\nexport class RegisterErrorResponse {\n  code: number = 409; // 409 Conflict\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents auth (login) error response.\n */\nexport class AuthErrorResponse {\n  code: number = 400; // 400 bad request\n  message: string = '';\n\n  constructor(message: string, code: number = 400) {\n    this.message = message;\n    this.code = code;\n  }\n\n  static missingAuthToken(): AuthErrorResponse {\n    return new AuthErrorResponse('Missing authorization token', 401);\n  }\n\n  static authRequired(): AuthErrorResponse {\n    return new AuthErrorResponse('Authorization required', 401);\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n"]}