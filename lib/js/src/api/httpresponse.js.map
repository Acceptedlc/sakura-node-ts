{"version":3,"sources":["../src/api/httpresponse.ts"],"names":[],"mappings":"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","file":"httpresponse.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport {ApiError} from './apierror';\n\n/**\n * Represents HTTP response.\n */\nexport class HttpResponse {\n  code: number = 0;\n\n  constructor(code: number) {\n    this.code = code;\n  }\n}\n\n/**\n * Represents success response with only 1 page.\n */\nexport class SuccessResponse extends HttpResponse {\n  data: any;\n  constructor(data: any, code: number = 200) {\n    super(code);\n    this.data = Object.assign(data, {code: code});\n  }\n  toJSON(): any {\n    return {\n      data: this.data\n    };\n  }\n}\n\n/**\n * ErrorResponse\n */\nexport class ErrorResponse extends HttpResponse {\n  message: string;\n  constructor(message: string, code: number = 500) {\n    super(code);\n    this.message = message;\n  }\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents bad request (:400) response.\n */\nexport class BadRequestResponse extends HttpResponse {\n  errors: Array<ApiError>;\n  message: string = 'Bad Request';\n\n  constructor(errors: Array<ApiError>) {\n    super(400);\n    this.errors = errors;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        errors: this.errors,\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents not found (:404) response.\n */\nexport class NotFoundResponse extends HttpResponse {\n  message: string = 'Not Found';\n\n  constructor(message: string) {\n    super(404);\n    this.message = message;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents register error response.\n */\nexport class RegisterErrorResponse extends HttpResponse {\n  message: string;\n\n  constructor(message: string) {\n    super(409); // 409 Conflict\n    this.message = message;\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n\n/**\n * Represents auth (login) error response.\n */\nexport class AuthErrorResponse extends HttpResponse {\n  message: string = '';\n\n  constructor(message: string, code: number = 400) {\n    super(code);\n    this.message = message;\n    this.code = code;\n  }\n\n  static missingAuthToken(): AuthErrorResponse {\n    return new AuthErrorResponse('Missing authorization token', 401);\n  }\n\n  static authRequired(): AuthErrorResponse {\n    return new AuthErrorResponse('Authorization required', 401);\n  }\n\n  toJSON(): any {\n    return {\n      error: {\n        code: this.code,\n        message: this.message\n      }\n    };\n  }\n}\n"]}