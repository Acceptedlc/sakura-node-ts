{"version":3,"sources":["../src/test/sqlquery/testinsertquery_transaction_issue.ts"],"names":[],"mappings":"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","file":"testinsertquery_transaction_issue.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport * as chai from 'chai';\n\nimport {TableName, Column} from '../../base/decorator';\nimport {Model, SqlFlag, SqlType, SqlDefaultValue} from '../../base/model';\nimport {InsertQuery} from '../../sqlquery/insertquery';\nimport {timestamp} from '../../base/typedefines';\nimport {DateUtil} from '../../util/dateutil';\n\nexport enum TransactionAction {\n  BUY = 0,\n  SELL\n}\n\n@TableName('transactions')\nexport class Transaction extends Model {\n\n  @Column('id', SqlType.INT, SqlFlag.PRIMARY_KEY, '交易的唯一标识', SqlDefaultValue.SERIAL())\n  private id_: number;\n\n  @Column('uid', SqlType.INT, SqlFlag.NOT_NULL, '用户ID')\n  uid: number;\n\n  @Column('stock_id', SqlType.VARCHAR_255, SqlFlag.NOT_NULL, '股票代码')\n  stockId: string;\n\n  @Column('action_type', SqlType.INT, SqlFlag.NOT_NULL)\n  actionType: number;\n\n  @Column('position', SqlType.INT, SqlFlag.NOT_NULL)\n  position: number;\n\n  @Column('position_sizing', SqlType.INT, SqlFlag.NOT_NULL)\n  positionSizing: number;\n\n  @Column('broker_id', SqlType.VARCHAR_255, SqlFlag.NOT_NULL)\n  brokerId: string;\n\n  @Column('action_date', SqlType.TIMESTAMP, SqlFlag.NOT_NULL)\n  actionTimestamp: number;\n\n\n  init(uid: number, stockId: string, actionType: number, position: number, positionSizing: number,\n       brokerId: string, actionTimestamp: number) {\n    this.uid = uid;\n    this.stockId = stockId;\n    this.actionType = actionType;\n    this.position = position;\n    this.positionSizing = positionSizing;\n    this.brokerId = brokerId;\n    this.actionTimestamp = actionTimestamp;\n  }\n}\n\ndescribe('Test InsertQuery (issues)', () => {\n  it('Transaction should have action_type in insert query while action_type=0', () => {\n    const fakeUid: number = 1024;\n    const fakeTimestamp: timestamp = DateUtil.millisecondToTimestamp(new Date('2016-10-15T10:46:58.000Z').getTime());\n\n    const transaction: Transaction = new Transaction();\n    transaction.init(fakeUid, 'SZ000333', 0, 2611, 100, 'xnzq', fakeTimestamp);\n    transaction.actionType = 0;\n\n    const sql: string = new InsertQuery().fromModel(transaction).build();\n    const expectSql: string =\n      `INSERT INTO transactions (uid,stock_id,action_type,position,position_sizing,broker_id,action_date) VALUES (1024,'SZ000333',0,2611,100,'xnzq',to_timestamp(1476528418)) RETURNING id`;\n    chai.expect(sql).to.equal(expectSql);\n  });\n});\n"]}