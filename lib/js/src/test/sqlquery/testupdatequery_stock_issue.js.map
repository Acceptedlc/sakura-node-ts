{"version":3,"sources":["../src/test/sqlquery/testupdatequery_stock_issue.ts"],"names":[],"mappings":";;;;;;;AAGA,6BAA6B;AAE7B,oDAAuD;AACvD,4CAAyD;AACzD,4DAAuD;AAGvD,IAAa,KAAK,GAAlB,WAAmB,SAAQ,aAAK;IADhC;;QAmBE,cAAS,GAAW,CAAC,CAAC;QAGtB,aAAQ,GAAW,CAAC,CAAC;IAWvB,CAAC;IATC,IAAI,CAAC,GAAW,EAAE,OAAe,EAAE,WAAmB,EAAE,YAAoB,EAAE,MAAc,EAAE,SAAkB,EAAE,QAAiB;QACjI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,EAAE,CAAC,CAAC,QAAQ,CAAC;YAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvC,EAAE,CAAC,CAAC,SAAS,CAAC;YAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5C,CAAC;CACF,CAAA;AA7BC;IADC,kBAAM,CAAC,UAAU,EAAE,eAAO,CAAC,WAAW,EAAE,eAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC;sCAC7D;AAGhB;IADC,kBAAM,CAAC,KAAK,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;kCAC1C;AAGZ;IADC,kBAAM,CAAC,cAAc,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;0CAC1C;AAGpB;IADC,kBAAM,CAAC,eAAe,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;2CAC1C;AAGrB;IADC,kBAAM,CAAC,QAAQ,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,KAAK,CAAC;qCACxC;AAGf;IADC,kBAAM,CAAC,YAAY,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,cAAc,CAAC;wCAC9C;AAGtB;IADC,kBAAM,CAAC,WAAW,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,QAAQ,EAAE,cAAc,CAAC;uCAC9C;AArBV,KAAK;IADjB,qBAAS,CAAC,QAAQ,CAAC;GACP,KAAK,CAgCjB;AAhCY,sBAAK;AAkClB,QAAQ,CAAC,2BAA2B,EAAE;IACpC,IAAI,KAAK,GAAU,IAAI,KAAK,EAAE,CAAC;IAC/B,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEhD,EAAE,CAAC,wFAAwF,EAAE;QAC3F,MAAM,GAAG,GAAW,IAAI,yBAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,aAAa,KAAK,CAAC,OAAO,GAAG,EAAE,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QAExH,MAAM,SAAS,GAAW,iKAAiK,CAAC;QAE5L,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"testupdatequery_stock_issue.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport * as chai from 'chai';\n\nimport {TableName, Column} from '../../base/decorator';\nimport {Model, SqlType, SqlFlag} from '../../base/model';\nimport {UpdateQuery} from '../../sqlquery/updatequery';\n\n@TableName('stocks')\nexport class Stock extends Model {\n\n  @Column('stock_id', SqlType.VARCHAR_255, SqlFlag.NOT_NULL, '股票代码，如 SZ000333')\n  stockId: string;\n\n  @Column('uid', SqlType.INT, SqlFlag.NOT_NULL, '用户 ID')\n  uid: number;\n\n  @Column('diluted_cost', SqlType.INT, SqlFlag.NOT_NULL, '摊薄成本')\n  dilutedCost: number; // in RMB fen.\n\n  @Column('carrying_cost', SqlType.INT, SqlFlag.NOT_NULL, '持仓成本')\n  carryingCost: number; // in RMB fen.\n\n  @Column('sizing', SqlType.INT, SqlFlag.NOT_NULL, '持仓数')\n  sizing: number; // in unit share.\n\n  @Column('expect_out', SqlType.INT, SqlFlag.NOT_NULL, '期望卖出价格(单位:分)')\n  expectOut: number = 0; // in RMB fen.\n\n  @Column('expect_in', SqlType.INT, SqlFlag.NOT_NULL, '期望买进价格(单位:分)')\n  expectIn: number = 0; // in RMB fen.\n\n  init(uid: number, stockId: string, dilutedCost: number, carryingCost: number, sizing: number, expectOut?: number, expectIn?: number): void {\n    this.uid = uid;\n    this.stockId = stockId;\n    this.dilutedCost = dilutedCost;\n    this.carryingCost = carryingCost;\n    this.sizing = sizing;\n    if (expectIn) this.expectIn = expectIn;\n    if (expectOut) this.expectOut = expectOut;\n  }\n}\n\ndescribe('Test UpdateQuery (issues)', () => {\n  let stock: Stock = new Stock();\n  stock.init(19900106, 'SZ000333', 0, 0, 0, 0, 0);\n\n  it('Stock update sql should include carryingCost and dilutedCost while they are equal to 0', () => {\n    const sql: string = new UpdateQuery().fromModel(stock).where(`stock_id='${stock.stockId}'`, `uid=${stock.uid}`).build();\n\n    const expectSql: string = `UPDATE stocks SET stock_id='SZ000333',uid=19900106,diluted_cost=0,carrying_cost=0,sizing=0,expect_out=0,expect_in=0 WHERE stock_id='SZ000333' AND uid=19900106;`;\n\n    chai.expect(sql).to.equal(expectSql);\n  });\n});\n"]}