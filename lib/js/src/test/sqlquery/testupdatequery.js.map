{"version":3,"sources":["../src/test/sqlquery/testupdatequery.ts"],"names":[],"mappings":";;;;;;;AAGA,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,8BAA0B,4BAA4B,CAAC,CAAA;AACvD,4BAAwB,sBAAsB,CAAC,CAAA;AAC/C,wBAAoB,kBAAkB,CAAC,CAAA;AAGvC,8BAAmB,aAAK;AAAE,CAAC;AAD3B;IAAC,qBAAS,CAAC,OAAO,CAAC;QAAA;AAGnB,QAAQ,CAAC,aAAa,EAAE;IACtB,EAAE,CAAC,oCAAoC,EAAE;QACvC,MAAM,GAAG,GAAW,IAAI,yBAAW,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QAC3G,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACtC,MAAM,GAAG,GAAW,IAAI,yBAAW,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;QACrH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"testupdatequery.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport * as chai from \"chai\";\n\nimport {UpdateQuery} from \"../../sqlquery/updatequery\";\nimport {TableName} from \"../../base/decorator\";\nimport {Model} from \"../../base/model\";\n\n@TableName('users')\nclass User extends Model {}\n\ndescribe('UpdateQuery', () => {\n  it('UpdateQuery with one set and where', () => {\n    const sql: string = new UpdateQuery().table('films').set('kind', 'Dramatic').where(`kind='Drama'`).build();\n    chai.expect(sql).to.equal(`UPDATE films SET kind='Dramatic' WHERE kind='Drama';`);\n  });\n\n  it('UpdateQuery table name from class', () => {\n    const sql: string = new UpdateQuery().tableNameFromClass(User).set('kind', 'Dramatic').where(`kind='Drama'`).build();\n    chai.expect(sql).to.equal(`UPDATE users SET kind='Dramatic' WHERE kind='Drama';`);\n  });\n});"]}