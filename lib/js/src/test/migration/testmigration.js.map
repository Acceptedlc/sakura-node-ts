{"version":3,"sources":["../src/test/migration/testmigration.ts"],"names":[],"mappings":";;;;;;;AAGA,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,4BAAwB,2BAA2B,CAAC,CAAA;AACpD,4BAAgC,sBAAsB,CAAC,CAAA;AACvD,wBAAsC,kBAAkB,CAAC,CAAA;AAGzD,8BAAmB,aAAK;AAkBxB,CAAC;AAjBC;IAAC,kBAAM,CAAC,KAAK,EAAE,eAAO,CAAC,GAAG,EAAE,eAAO,CAAC,WAAW,CAAC;iCAAA;AAGhD;IAAC,kBAAM,CAAC,UAAU,EAAE,eAAO,CAAC,WAAW,EAAE,eAAO,CAAC,QAAQ,CAAC;sCAAA;AAG1D;IAAC,kBAAM,CAAC,cAAc,EAAE,eAAO,CAAC,WAAW,EAAE,eAAO,CAAC,QAAQ,CAAC;yCAAA;AAG9D;IAAC,kBAAM,CAAC,MAAM,EAAE,eAAO,CAAC,IAAI,EAAE,eAAO,CAAC,QAAQ,CAAC;kCAAA;AAG/C;IAAC,kBAAM,CAAC,YAAY,EAAE,eAAO,CAAC,SAAS,EAAE,eAAO,CAAC,QAAQ,CAAC;uCAAA;AAG1D;IAAC,kBAAM,CAAC,YAAY,EAAE,eAAO,CAAC,SAAS,EAAE,eAAO,CAAC,QAAQ,CAAC;uCAAA;AAjB5D;IAAC,qBAAS,CAAC,OAAO,CAAC;QAAA;AAqBnB,QAAQ,CAAC,gBAAgB,EAAE;IACzB,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,SAAS,GAAW;;;;;;;GAO3B,CAAC;QAEA,IAAI,SAAS,GAAc,IAAI,qBAAS,EAAE,CAAC;QAC3C,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;QACnD,MAAM,SAAS,GAAW,kDAAkD,CAAC;QAE7E,IAAI,SAAS,GAAc,IAAI,qBAAS,EAAE,CAAC;QAC3C,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAO,CAAC,WAAW,EAAE,IAAI,EAAE,eAAO,CAAC,QAAQ,EAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE;QAC9B,MAAM,SAAS,GAAW,gDAAgD,CAAC;QAE3E,IAAI,SAAS,GAAc,IAAI,qBAAS,EAAE,CAAC;QAC3C,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAChC,MAAM,SAAS,GAAW,gEAAgE,CAAC;QAE3F,IAAI,SAAS,GAAc,IAAI,qBAAS,EAAE,CAAC;QAC3C,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"testmigration.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport * as chai from 'chai';\n\nimport {Migration} from '../../migration/migration';\nimport {TableName, Column} from '../../base/decorator';\nimport {Model, SqlType, SqlFlag} from '../../base/model';\n\n@TableName('users')\nclass User extends Model {\n  @Column('uid', SqlType.INT, SqlFlag.PRIMARY_KEY)\n  uid: number;\n\n  @Column('username', SqlType.VARCHAR_255, SqlFlag.NOT_NULL)\n  username: string;\n\n  @Column('display_name', SqlType.VARCHAR_255, SqlFlag.NULLABLE)\n  displayName: string;\n\n  @Column('meta', SqlType.JSON, SqlFlag.NULLABLE)\n  meta: any;\n\n  @Column('created_at', SqlType.TIMESTAMP, SqlFlag.NULLABLE)\n  createdAt: Date;\n\n  @Column('updated_at', SqlType.TIMESTAMP, SqlFlag.NULLABLE)\n  updatedAt: number;\n}\n\ndescribe('Test Migration', () => {\n  it('Test Migration.addModel', () => {\n    const expectSql: string = `CREATE TABLE users (\nuid INTEGER PRIMARY KEY,\nusername VARCHAR(255),\ndisplay_name VARCHAR(255),\nmeta JSON,\ncreated_at TIMESTAMP,\nupdated_at TIMESTAMP\n);`;\n\n    let migration: Migration = new Migration();\n    migration.addModel(User);\n    chai.expect(migration.preview()).to.equal(expectSql);\n  });\n\n  it('Test Migration.addColumn without default value', () => {\n    const expectSql: string = `ALTER TABLE users ADD COLUMN alias VARCHAR(255);`;\n\n    let migration: Migration = new Migration();\n    migration.addColumn(User, {name: 'alias', type: SqlType.VARCHAR_255, flag: SqlFlag.NULLABLE});\n    chai.expect(migration.preview()).to.equal(expectSql);\n  });\n\n  it('Test Migration.dropColumn', () => {\n    const expectSql: string = `ALTER TABLE users DROP COLUMN IF EXISTS alias;`;\n\n    let migration: Migration = new Migration();\n    migration.dropColumn(User, 'alias');\n    chai.expect(migration.preview()).to.equal(expectSql);\n  });\n\n  it('Test Migration.renameColumn', () => {\n    const expectSql: string = `ALTER TABLE users RENAME COLUMN display_name TO display_name2;`;\n\n    let migration: Migration = new Migration();\n    migration.renameColumn(User, 'display_name', 'display_name2');\n    chai.expect(migration.preview()).to.equal(expectSql);\n  });\n});\n"]}