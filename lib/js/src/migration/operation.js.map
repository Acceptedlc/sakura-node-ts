{"version":3,"sources":["../src/migration/operation.ts"],"names":[],"mappings":";AAIA,wDAAmD;AAKnD;CAGC;AAHD,8BAGC;AAKD,oBAAqC,SAAQ,SAAS;CACrD;AADD,wCACC;AAKD,qBAAsC,SAAQ,SAAS;CACtD;AADD,0CACC;AAKD,uBAA+B,SAAQ,cAAc;IACnD,YAAY,GAAa;QACvB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAED,GAAG;QACD,MAAM,CAAC,2BAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/D,CAAC;CACF;AATD,8CASC;AAaD,0BAAkC,SAAQ,cAAc;IACtD,YAAY,GAAa;QACvB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAED,GAAG;QACD,MAAM,CAAC,2BAAY,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpE,CAAC;CACF;AATD,oDASC;AAKD,wBAAgC,SAAQ,eAAe;IAGrD,YAAY,GAAa,EAAE,MAAa;QACtC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,GAAG;QACD,MAAM,CAAC,2BAAY,CAAC,qCAAqC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5F,CAAC;CACF;AAZD,gDAYC;AAKD,yBAAiC,SAAQ,eAAe;IAGtD,YAAY,GAAa,EAAE,IAAY;QACrC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,GAAG;QACD,MAAM,CAAC,2BAAY,CAAC,sCAAsC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC;CACF;AAZD,kDAYC;AAKD,2BAAmC,SAAQ,eAAe;IAIxD,YAAY,GAAa,EAAE,OAAe,EAAE,OAAe;QACzD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,GAAG;QACD,MAAM,CAAC,2BAAY,CAAC,wCAAwC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/G,CAAC;CACF;AAdD,sDAcC","file":"operation.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport {Field} from './column';\nimport {sqlGenerator} from '../tools/sqlgenerator';\n\n/**\n * Base operation.\n */\nexport abstract class Operation {\n  protected modelClass_: Function;\n  abstract sql(): string;\n}\n\n/**\n * Model operation or table operation.\n */\nexport abstract class ModelOperation extends Operation {\n}\n\n/**\n * Column operation or field operation.\n */\nexport abstract class ColumnOperation extends Operation {\n}\n\n/**\n * Adds model operation aka CREATE TABLE.\n */\nexport class AddModelOperation extends ModelOperation {\n  constructor(cls: Function) {\n    super();\n    this.modelClass_ = cls;\n  }\n\n  sql(): string {\n    return sqlGenerator.generateCreateTableSql(this.modelClass_);\n  }\n}\n\n// export class AddTestModelOperation extends ModelOperation {\n//   constructor(cls: Function) {\n//     super();\n//     this.modelClass_ = cls;\n//   }\n//\n//   sql(): string {\n//     return testSqlGenerator.generateCreateTableSql(this.modelClass_);\n//   }\n// }\n\nexport class InitCommentOperation extends ModelOperation {\n  constructor(cls: Function) {\n    super();\n    this.modelClass_ = cls;\n  }\n\n  sql(): string {\n    return sqlGenerator.generateColumnCommentAction(this.modelClass_);\n  }\n}\n\n/**\n * Adds column operation aka ALTER TABLE ... ADD COLUMN.\n */\nexport class AddColumnOperation extends ColumnOperation {\n  private column_: Field;\n\n  constructor(cls: Function, column: Field) {\n    super();\n    this.modelClass_ = cls;\n    this.column_ = column;\n  }\n\n  sql(): string {\n    return sqlGenerator.generateAlertTableWithAddColumnAction(this.modelClass_, this.column_);\n  }\n}\n\n/**\n * Drop column operation aka ALTER TABLE ... DROP COLUMN IF EXISTS.\n */\nexport class DropColumnOperation extends ColumnOperation {\n  private name_: string;\n\n  constructor(cls: Function, name: string) {\n    super();\n    this.modelClass_ = cls;\n    this.name_ = name;\n  }\n\n  sql(): string {\n    return sqlGenerator.generateAlertTableWithDropColumnAction(this.modelClass_, this.name_);\n  }\n}\n\n/**\n * Rename column operation aka ALTER TABLE ... DROP COLUMN IF EXISTS.\n */\nexport class RenameColumnOperation extends ColumnOperation {\n  private oldName_: string;\n  private newName_: string;\n\n  constructor(cls: Function, oldName: string, newName: string) {\n    super();\n    this.modelClass_ = cls;\n    this.oldName_ = oldName;\n    this.newName_ = newName;\n  }\n\n  sql(): string {\n    return sqlGenerator.generateAlertTableWithRenameColumnAction(this.modelClass_, this.oldName_, this.newName_);\n  }\n}\n"]}