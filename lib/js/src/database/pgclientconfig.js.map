{"version":3,"sources":["../src/database/pgclientconfig.ts"],"names":[],"mappings":";AAGA,MAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AAKzB;IAOE,YAAY,QAAgB;QAC1B,MAAM,UAAU,GAAQ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;AACH,CAAC;AAfY,sBAAc,iBAe1B,CAAA","file":"pgclientconfig.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport * as fs from \"fs\";\n\n/**\n * Parser of *.pg.dbconfig.json.\n */\nexport class PgClientConfig {\n  user: string;\n  password: string;\n  datebase: string;\n  host: string;\n  port: number;\n\n  constructor(filePath: string) {\n    const configJson: any = JSON.parse(fs.readFileSync(filePath, 'utf-8'));\n    this.user = configJson['user'];\n    this.password = configJson['password'];\n    this.datebase = configJson['database'];\n    this.host = configJson['host'];\n    this.port = configJson['port'];\n  }\n}"]}