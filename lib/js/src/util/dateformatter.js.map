{"version":3,"sources":["../src/util/dateformatter.ts"],"names":[],"mappings":";AAGA,WAAY,eAAe;IACzB,yEAAc,CAAA;AAChB,CAAC,EAFW,uBAAe,KAAf,uBAAe,QAE1B;AAFD,IAAY,eAAe,GAAf,uBAEX,CAAA;AAKD;IASE,OAAO,cAAc,CAAC,IAAU,EAAE,MAAuB,EAAE,MAAc;QACvE,IAAI,EAAE,GAAW,IAAI,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,EAAE,GAAW,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrC,IAAI,IAAI,GAAW,IAAI,CAAC,WAAW,EAAE,CAAC;QAEtC,EAAE,CAAC,CAAC,MAAM,KAAK,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,EAAE,CAAC;QAC/C,CAAC;QAED,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;AACH,CAAC;AApBY,qBAAa,gBAoBzB,CAAA","file":"dateformatter.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nexport enum DateFormtOption {\n  YEAR_MONTH_DAY\n}\n\n/**\n * DateFormatter helps cast from string to date or date to string.\n */\nexport class DateFormatter {\n\n  /**\n   * Format date to string.\n   * @param date Date.\n   * @param option Option of {DateFormatOption}.\n   * @param symbol Cat symbol.\n   * @returns {string} Formatted string.\n   */\n  static stringFromDate(date: Date, option: DateFormtOption, symbol: string): string {\n    let dd: number = date.getDate();\n    let mm: number = date.getMonth() + 1;\n    let year: number = date.getFullYear();\n\n    if (option === DateFormtOption.YEAR_MONTH_DAY) {\n      return `${year}${symbol}${mm}${symbol}${dd}`;\n    }\n\n    return '';\n  }\n}"]}